# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v3
    - name: Set up conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniforge-variant: Mambaforge # mamba is faster than base conda
        miniforge-version: latest
        activate-environment: osier-env
        use-mamba: true
        use-only-tar-bz2: true
    - run: |
        conda config --env --set pip_interop_enabled True
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install CBC
      run: |
        mamba install coincbc
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Install osier package
      run: |
        pip install .
    - name : Install recent unyt update
      run: |
        python3 -m pip install -e git+https://github.com/yt-project/unyt.git#egg=unyt
    - name: Test with pytest
      run: |
        pytest tests/

    - name: Open Journals PDF Generator
      uses: openjournals/openjournals-draft-action@v.1.0
  
